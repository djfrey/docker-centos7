
<SPConfig xmlns="urn:mace:shibboleth:3.0:native:sp:config"
    xmlns:conf="urn:mace:shibboleth:3.0:native:sp:config"
    clockSkew="180">

    <OutOfProcess tranLogFormat="%u|%s|%IDP|%i|%ac|%t|%attr|%n|%b|%E|%S|%SS|%L|%UA|%a" />

    <!--
    By default, in-memory StorageService, ReplayCache, ArtifactMap, and SessionCache
    are used. See example-shibboleth2.xml for samples of explicitly configuring them.
    -->

    <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
    <!-- NCSU CHANGES: 
        - set your entityID here. you should only need to change the domainname
        - make sure you added these signing and encryption settings
        - we pass scoped userid to SHIB_EPPN, which is used here for REMOTE_USER
    -->
    <ApplicationDefaults entityID="https://local.advancement-services.ncsu.edu/sp/shibboleth"
            signing="true" encryption="false"        
		    REMOTE_USER="SHIB_EPPN eppn subject-id pairwise-id persistent-id"
            cipherSuites="DEFAULT:!EXP:!LOW:!aNULL:!eNULL:!DES:!IDEA:!SEED:!RC4:!3DES:!kRSA:!SSLv2:!SSLv3:!TLSv1:!TLSv1.1">
			
        <!--
        Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
        Each Application has an effectively unique handlerURL, which defaults to "/Shibboleth.sso"
        and should be a relative path, with the SP computing the full value based on the virtual
        host. Using handlerSSL="true" will force the protocol to be https. You should also set
        cookieProps to "https" for SSL-only sites. Note that while we default checkAddress to
        "false", this makes an assertion stolen in transit easier for attackers to misuse.
        -->
        <!-- NCSU CHANGES:
            - checkAddress - when true the client IP must match the IP in
              the assertions sent by the IdP. 
            - consistentAddress - when true, the client IP must always match 
              the IP used when the SP session was created.
            - handlerSSL - if your host runs SSL, you should use it and 
              set this "true". If you do not have SSL on your host, set this to
              false so your handler uses http: URLs. 
              Note: There is a POST-redirect from an SSL site to your 
              handler, and it will throw a warning on most browsers if 
              this is "false".
            - cookieProps - Set to "https" if your site is all SSL. 
              Set to "http" to allow Shibboleth sessions on non-SSL pages.
        -->
        <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                  checkAddress="false" 
                  consistentAddress="true" 
                  handlerSSL="true" cookieProps="https">

            <!--
            Configures SSO for a default IdP. To properly allow for >1 IdP, remove
            entityID property and adjust discoveryURL to point to discovery service.
            You can also override entityID on /Login query string, or in RequestMap/htaccess.
            -->
            <!-- NCSU CHANGES: -->
            <SSO entityID="https://shib.ncsu.edu/idp/shibboleth">
              SAML2
            </SSO>

            <!-- SAML and local-only logout. -->
            <Logout>SAML2 Local</Logout>

            <!-- Administrative logout. -->
            <LogoutInitiator type="Admin" Location="/Logout/Admin" acl="127.0.0.1 ::1" />
            
            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/Status" acl="127.0.0.1 ::1"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="false"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
        </Sessions>

        <!--
        Allows overriding of error template information/filenames. You can
        also add your own attributes with values that can be plugged into the
        templates, e.g., helpLocation below.
        -->
        <Errors supportContact="root@localhost"
            helpLocation="/about.html"
            styleSheet="/shibboleth-sp/main.css"/>
        
        <!-- Example of locally maintained metadata. -->
        <!--
        <MetadataProvider type="XML" validate="true" path="partner-metadata.xml"/>
        -->
        
        <!-- Example of remotely supplied batch of signed metadata. -->
        <!-- NCSU CHANGES:
            - use these settings to allow the SP software to download and maintain
              the federation metadata for itself. 
              You need to be sure to download the ncsu_federation.pem file from
              https://docs.shib.ncsu.edu/federation/ncsu_federation.pem
              and save it in your /etc/shibboleth directory.
        -->
        <MetadataProvider type="XML" id="NCSU_Fed"
              url="https://docs.shib.ncsu.edu/federation/metadata.xml"
              backingFilePath="ncsu_fed_metadata.xml"
              maxRefreshDelay="43200"
              validate="false">
            <MetadataFilter type="RequireValidUntil"
              maxValidityInterval="8640000"/>
            <MetadataFilter type="Signature"
              certificate="ncsu_federation.pem"/>
        </MetadataProvider>

        <!-- Example of remotely supplied "on-demand" signed metadata. -->
        <!--
        <MetadataProvider type="MDQ" validate="true" cacheDirectory="mdq"
                baseUrl="http://mdq.federation.org" ignoreTransport="true">
            <MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
            <MetadataFilter type="Signature" certificate="mdqsigner.pem" />
        </MetadataProvider>
        -->

        <!-- Map to extract attributes from SAML assertions. -->
        <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>

        <!-- Default filtering policy for recognized attributes, lets other data pass. -->
        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <!-- Simple file-based resolver for using a single keypair. -->
        <!-- NCSU CHANGES:
            - SP 3.0 suggests using separate keys for signing and encryption.
              If you want to do that, comment this line and uncomment
              the section below. You will need to re-register your
              metadata with the Federation any time you change keys.
            - Just a warning. Make sure the key file listed here is 
              readable by the shibd user. It should be mode 0600, owner shibd.
              If this is wrong, the X509 cert will not be used in the metadata.
        --> 
       <CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/>

        <!-- Comment the line above and uncomment this to use the
             separate signing and encryption keys generated by SP 3.0 -->
        
       <!-- <CredentialResolver type="File" use="signing"
            key="sp-signing-key.pem" certificate="sp-signing-cert.pem"/>
        <CredentialResolver type="File" use="encryption"
            key="sp-encrypt-key.pem" certificate="sp-encrypt-cert.pem"/> -->

    </ApplicationDefaults>
    
    <!-- Policies that determine how to process and authenticate runtime messages. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
